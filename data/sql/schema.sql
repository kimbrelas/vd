CREATE TABLE address (id INT AUTO_INCREMENT, user_id INT DEFAULT '0' NOT NULL, is_billing TINYINT DEFAULT '0' NOT NULL, name_person VARCHAR(60) DEFAULT '0' NOT NULL, name_company VARCHAR(60) DEFAULT '0' NOT NULL, address1 VARCHAR(60), address2 VARCHAR(60), city VARCHAR(60), state VARCHAR(2), zip VARCHAR(12), phone_1 VARCHAR(16), phone_2 VARCHAR(16), phone_3 VARCHAR(16), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ci_sessions (session_id VARCHAR(40), ip_address VARCHAR(16) DEFAULT '0' NOT NULL, user_agent VARCHAR(50) NOT NULL, last_activity INT UNSIGNED DEFAULT '0' NOT NULL, user_data TEXT NOT NULL, PRIMARY KEY(session_id)) ENGINE = INNODB;
CREATE TABLE credit (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE instant_history (user_id INT, movie_id INT, seektime INT, did_finish INT, PRIMARY KEY(user_id, movie_id)) ENGINE = INNODB;
CREATE TABLE list_lookup (list_id INT, movie_id INT, PRIMARY KEY(list_id, movie_id)) ENGINE = INNODB;
CREATE TABLE list_types (id INT AUTO_INCREMENT, type VARCHAR(50) DEFAULT '' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE list_values (id INT AUTO_INCREMENT, name VARCHAR(75) DEFAULT '0' NOT NULL, description TEXT, type INT NOT NULL, dob DATE, location VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE log (id INT AUTO_INCREMENT, action_type VARCHAR(10) DEFAULT '0' NOT NULL, user_id INT DEFAULT '0' NOT NULL, movie_id INT DEFAULT '0' NOT NULL, detailtext TEXT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE movie (id INT AUTO_INCREMENT, title VARCHAR(75) DEFAULT '0' NOT NULL, year INT DEFAULT '0' NOT NULL, description TEXT, can_rent TINYINT DEFAULT '0' NOT NULL, can_buy TINYINT DEFAULT '0' NOT NULL, can_stream TINYINT DEFAULT '0' NOT NULL, rating_average FLOAT(18, 2) DEFAULT 2.5 NOT NULL, rating_count SMALLINT DEFAULT '0' NOT NULL, film_type VARCHAR(1) DEFAULT 'B', mpaa VARCHAR(5), runtime INT DEFAULT '0', active SMALLINT DEFAULT '0' NOT NULL, date_added DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE movie_credit_person (movie_id INT, credit_id BIGINT, person_id BIGINT, PRIMARY KEY(movie_id, credit_id, person_id)) ENGINE = INNODB;
CREATE TABLE movie_forrent (id INT AUTO_INCREMENT, movie_id INT NOT NULL, price DECIMAL(4, 2) NOT NULL, format VARCHAR(3) NOT NULL, active TINYINT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE movie_forsale (id INT AUTO_INCREMENT, movie_id INT NOT NULL, price DECIMAL(4, 2) NOT NULL, format VARCHAR(3) NOT NULL, qty INT, active TINYINT DEFAULT '1' NOT NULL, backordered TINYINT DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE movie_forstream (id INT AUTO_INCREMENT, movie_id INT DEFAULT '0', bucket_name VARCHAR(128) DEFAULT '0', domain_name VARCHAR(128) DEFAULT '0', distribution_id VARCHAR(128) DEFAULT '0', PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE person (id BIGINT AUTO_INCREMENT, first_name VARCHAR(20), last_name VARCHAR(20), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE plan_types (id INT AUTO_INCREMENT, type VARCHAR(50) NOT NULL, name VARCHAR(50) NOT NULL, monthly_cost FLOAT(5, 2) NOT NULL, description TEXT NOT NULL, active TINYINT DEFAULT '1' NOT NULL, instant_minutes INT NOT NULL, dvds_out INT NOT NULL, dvds_per_month INT NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE rating (user_id INT, movie_id INT, rating INT NOT NULL, PRIMARY KEY(user_id, movie_id)) ENGINE = INNODB;
CREATE TABLE shipping_method (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, cost FLOAT(18, 2) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE states (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, abbr VARCHAR(2) NOT NULL, sales_tax DECIMAL(7, 6) DEFAULT 0.000000 NOT NULL, charge_tax TINYINT DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE suggest_cache (id INT AUTO_INCREMENT, user_id INT DEFAULT '0', list_type INT DEFAULT '0', list_id INT DEFAULT '0', ratio FLOAT(18, 2) DEFAULT 0, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE suggest_cache_status (user_id INT, list_type INT, lastcheck DATETIME NOT NULL, countsince INT NOT NULL, numrows INT NOT NULL, PRIMARY KEY(user_id, list_type)) ENGINE = INNODB;
CREATE TABLE top50 (movie_id INT DEFAULT '0' NOT NULL, position INT AUTO_INCREMENT, last_position INT, PRIMARY KEY(position)) ENGINE = INNODB;
CREATE TABLE user (id INT AUTO_INCREMENT, email VARCHAR(60) DEFAULT '0' NOT NULL, password VARCHAR(32) NOT NULL, firstname VARCHAR(60) DEFAULT '0' NOT NULL, lastname VARCHAR(60) DEFAULT '0' NOT NULL, company VARCHAR(60) DEFAULT '0' NOT NULL, had_trial TINYINT DEFAULT '0' NOT NULL, trial_expire_date DATETIME, dob DATETIME, gender VARCHAR(1) DEFAULT '0', primary_address INT DEFAULT '0' NOT NULL, is_admin TINYINT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_instant_auth (user_id INT, movie_id INT NOT NULL, hash VARCHAR(32) NOT NULL, authtime DATETIME NOT NULL, PRIMARY KEY(user_id)) ENGINE = INNODB;
CREATE TABLE user_queue (user_id INT, movie_id INT, position INT NOT NULL, format VARCHAR(3), PRIMARY KEY(user_id, movie_id, format)) ENGINE = INNODB;
CREATE TABLE user_rentals (user_id INT, movie_id INT, format VARCHAR(50) NOT NULL, out_now TINYINT NOT NULL, date_rented DATETIME NOT NULL, date_returned DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(user_id, movie_id)) ENGINE = INNODB;
CREATE TABLE user_subscription (user_id INT, plan_id INT NOT NULL, start_date DATETIME NOT NULL, renewal_date DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, monthly_cost FLOAT(5, 2) NOT NULL, dvds_this_month INT NOT NULL, minutes_remaining INT NOT NULL, PRIMARY KEY(user_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE movie_credit_person ADD CONSTRAINT movie_credit_person_person_id_person_id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE;
ALTER TABLE movie_credit_person ADD CONSTRAINT movie_credit_person_movie_id_movie_id FOREIGN KEY (movie_id) REFERENCES movie(id) ON DELETE CASCADE;
ALTER TABLE movie_credit_person ADD CONSTRAINT movie_credit_person_credit_id_credit_id FOREIGN KEY (credit_id) REFERENCES credit(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
