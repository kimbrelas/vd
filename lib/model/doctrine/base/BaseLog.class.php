<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Log', 'doctrine');

/**
 * BaseLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $action_type
 * @property integer $user_id
 * @property integer $movie_id
 * @property string $detailtext
 * 
 * @method integer getId()          Returns the current record's "id" value
 * @method string  getActionType()  Returns the current record's "action_type" value
 * @method integer getUserId()      Returns the current record's "user_id" value
 * @method integer getMovieId()     Returns the current record's "movie_id" value
 * @method string  getDetailtext()  Returns the current record's "detailtext" value
 * @method Log     setId()          Sets the current record's "id" value
 * @method Log     setActionType()  Sets the current record's "action_type" value
 * @method Log     setUserId()      Sets the current record's "user_id" value
 * @method Log     setMovieId()     Sets the current record's "movie_id" value
 * @method Log     setDetailtext()  Sets the current record's "detailtext" value
 * 
 * @package    dukaan
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('log');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('action_type', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('movie_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('detailtext', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}