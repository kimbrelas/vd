<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MovieForrent', 'doctrine');

/**
 * BaseMovieForrent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $movie_id
 * @property decimal $price
 * @property string $format
 * @property integer $active
 * 
 * @method integer      getId()       Returns the current record's "id" value
 * @method integer      getMovieId()  Returns the current record's "movie_id" value
 * @method decimal      getPrice()    Returns the current record's "price" value
 * @method string       getFormat()   Returns the current record's "format" value
 * @method integer      getActive()   Returns the current record's "active" value
 * @method MovieForrent setId()       Sets the current record's "id" value
 * @method MovieForrent setMovieId()  Sets the current record's "movie_id" value
 * @method MovieForrent setPrice()    Sets the current record's "price" value
 * @method MovieForrent setFormat()   Sets the current record's "format" value
 * @method MovieForrent setActive()   Sets the current record's "active" value
 * 
 * @package    dukaan
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMovieForrent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('movie_forrent');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('movie_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('price', 'decimal', 4, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             'scale' => '2',
             ));
        $this->hasColumn('format', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}