<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MovieForstream', 'doctrine');

/**
 * BaseMovieForstream
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $movie_id
 * @property string $bucket_name
 * @property string $domain_name
 * @property string $distribution_id
 * 
 * @method integer        getId()              Returns the current record's "id" value
 * @method integer        getMovieId()         Returns the current record's "movie_id" value
 * @method string         getBucketName()      Returns the current record's "bucket_name" value
 * @method string         getDomainName()      Returns the current record's "domain_name" value
 * @method string         getDistributionId()  Returns the current record's "distribution_id" value
 * @method MovieForstream setId()              Sets the current record's "id" value
 * @method MovieForstream setMovieId()         Sets the current record's "movie_id" value
 * @method MovieForstream setBucketName()      Sets the current record's "bucket_name" value
 * @method MovieForstream setDomainName()      Sets the current record's "domain_name" value
 * @method MovieForstream setDistributionId()  Sets the current record's "distribution_id" value
 * 
 * @package    dukaan
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMovieForstream extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('movie_forstream');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('movie_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('bucket_name', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('domain_name', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('distribution_id', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}